{"version":3,"sources":["api/api.ts","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["getData","url","a","fetch","response","json","data","getPreparedTodos","todos","users","preparedTodos","map","todo","user","find","id","userId","Todo","title","completed","name","className","TodoList","key","App","useState","setTodos","isLoading","setIsLoading","clickHandler","event","sortedTodos","todosList","sortBy","sort","todoA","todoB","localeCompare","sortTodos","currentTarget","length","type","onClick","disabled","then","todosWithUsers","ReactDOM","render","document","getElementById"],"mappings":"iSAGMA,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACSC,MAAMF,GADf,cACRG,EADQ,gBAEKA,EAASC,OAFd,cAERC,EAFQ,yBAIPA,GAJO,2CAAH,sDAOAC,EAAgB,uCAAG,gCAAAL,EAAA,sEACFF,EAVZ,8CASc,cACxBQ,EADwB,gBAEFR,EAZZ,8CAUc,cAExBS,EAFwB,OAIxBC,EAAgBF,EAAMG,KAAI,SAAAC,GAAI,kCAC/BA,GAD+B,IAElCC,KAAMJ,EAAMK,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOH,EAAKI,eANd,kBASvBN,GATuB,2CAAH,qDCJhBO,EAAkB,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAE9BG,EAIEH,EAJFG,GACAF,EAGED,EAHFC,KACAK,EAEEN,EAFFM,MACAC,EACEP,EADFO,UAGF,OACE,4BACE,4BAAKJ,GACL,4BAAKF,EAAKO,MACV,4BAAKF,GACJC,EACC,wBAAIE,UAAU,cAAd,UAA+BF,IAE/B,wBAAIE,UAAU,aAAd,UAA8BF,MCfzBG,EAAsB,SAAC,GAAe,IAAbd,EAAY,EAAZA,MACpC,OACE,2BAAOa,UAAU,kCACf,+BACE,4BACE,sCACA,oCACA,qCACA,wCAGJ,+BACGb,EAAMG,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CAAMW,IAAKX,EAAKG,GAAIH,KAAMA,UC+ErBY,G,MA9FC,WAAO,IAAD,EACMC,mBAAyB,IAD/B,mBACbjB,EADa,KACNkB,EADM,OAEcD,oBAAS,GAFvB,mBAEbE,EAFa,KAEFC,EAFE,KAkCdC,EAAe,SAACC,GACpB,IAAMC,EAvBU,SAACC,EAA2BC,GAC5C,OAAQA,GACN,IAAK,OACH,OAAOD,EAAUE,MAAK,SAACC,EAAOC,GAAR,OACpBD,EAAMtB,KAAKO,KAAKiB,cAAcD,EAAMvB,KAAKO,SAI7C,IAAK,QACH,OAAOY,EAAUE,MAAK,SAACC,EAAOC,GAAR,OACpBD,EAAMjB,MAAMmB,cAAcD,EAAMlB,UAIpC,IAAK,YACH,OAAOc,EAAUE,MAAK,SAACC,EAAOC,GAAR,OAAoBD,EAAMhB,WAAaiB,EAAMjB,aAGrE,QAAS,OAAOa,GAKEM,CAAU,YAAI9B,GAAQsB,EAAMS,cAAcnB,MAE9DM,EAASK,IAGX,OAAKvB,EAAMgC,OAiBT,yBAAKnB,UAAU,aACb,qDACA,2BACE,yCACCb,EAAMgC,QAET,yBAAKnB,UAAU,iBACb,4BACEA,UAAU,eACVD,KAAK,QACLqB,KAAK,SACLC,QAASb,GAJX,iBAQA,4BACER,UAAU,kBACVD,KAAK,OACLqB,KAAK,SACLC,QAASb,GAJX,gBAQA,4BACER,UAAU,kBACVD,KAAK,YACLqB,KAAK,SACLC,QAASb,GAJX,mBASF,kBAAC,EAAD,CAAUrB,MAAOA,KA/CjB,yBAAKa,UAAU,aACb,qDACA,4BACEA,UAAU,yBACVoB,KAAK,SACLE,SAAUhB,EACVe,QA5CY,WAClBd,GAAa,GAEbrB,IAAmBqC,MAAK,SAAAC,GACtBnB,EAASmB,QA0CJlB,EAAY,aAAe,iBCnDtCmB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c52c4ca8.chunk.js","sourcesContent":["const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n\nconst getData = async (url: string) => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nexport const getPreparedTodos = async (): Promise<TodoWithUser[]> => {\n  const todos: Todo[] = await getData(TODOS_URL);\n  const users: User[] = await getData(USERS_URL);\n\n  const preparedTodos = todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId) as User,\n  }));\n\n  return preparedTodos;\n};\n","import React, { FC } from 'react';\n\ninterface Props {\n  todo: TodoWithUser;\n}\n\nexport const Todo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{user.name}</td>\n      <td>{title}</td>\n      {completed ? (\n        <td className=\"bg-success\">{`${completed}`}</td>\n      ) : (\n        <td className=\"bg-danger\">{`${completed}`}</td>\n      )}\n    </tr>\n  );\n};\n","import React, { FC } from 'react';\nimport { Todo } from './Todo';\n\ninterface Props {\n  todos: TodoWithUser[];\n}\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table table-striped table-dark\">\n      <thead>\n        <tr>\n          <th>â„–</th>\n          <th>Name</th>\n          <th>Title</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => (\n          <Todo key={todo.id} todo={todo} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { FC, useState, MouseEvent } from 'react';\nimport { getPreparedTodos } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport './App.css';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadHandler = () => {\n    setIsLoading(true);\n\n    getPreparedTodos().then(todosWithUsers => {\n      setTodos(todosWithUsers);\n    });\n  };\n\n  const sortTodos = (todosList: TodoWithUser[], sortBy: string) => {\n    switch (sortBy) {\n      case 'name': {\n        return todosList.sort((todoA, todoB) => (\n          todoA.user.name.localeCompare(todoB.user.name)\n        ));\n      }\n\n      case 'title': {\n        return todosList.sort((todoA, todoB) => (\n          todoA.title.localeCompare(todoB.title)\n        ));\n      }\n\n      case 'completed': {\n        return todosList.sort((todoA, todoB) => (+todoA.completed - +todoB.completed));\n      }\n\n      default: return todosList;\n    }\n  };\n\n  const clickHandler = (event: MouseEvent<HTMLButtonElement>) => {\n    const sortedTodos = sortTodos([...todos], event.currentTarget.name);\n\n    setTodos(sortedTodos);\n  };\n\n  if (!todos.length) {\n    return (\n      <div className=\"container\">\n        <h1>Dynamic list of TODOs</h1>\n        <button\n          className=\"btn btn-primary btn-lg\"\n          type=\"button\"\n          disabled={isLoading}\n          onClick={loadHandler}\n        >\n          {isLoading ? 'Loading...' : 'Load Todos'}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Dynamic list of TODOs</h1>\n      <p>\n        <span>Todos: </span>\n        {todos.length}\n      </p>\n      <div className=\"btn-container\">\n        <button\n          className=\"btn btn-info\"\n          name=\"title\"\n          type=\"button\"\n          onClick={clickHandler}\n        >\n          Sort by title\n        </button>\n        <button\n          className=\"btn btn-warning\"\n          name=\"name\"\n          type=\"button\"\n          onClick={clickHandler}\n        >\n          Sort by name\n        </button>\n        <button\n          className=\"btn btn-success\"\n          name=\"completed\"\n          type=\"button\"\n          onClick={clickHandler}\n        >\n          Sort by status\n        </button>\n      </div>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}